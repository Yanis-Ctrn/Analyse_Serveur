import json
import requests
from requests.auth import HTTPDigestAuth
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

if __name__ == "__main__":
    pass

def stream_to_file(url, file_name, auth):
    with requests.get(url, auth=auth, stream=True, verify=False) as r:
        r.raise_for_status()

        obj_depth = 0
        current_obj = ''

        for chunk in r.iter_content(chunk_size=1, decode_unicode=True):
            current_obj += chunk
            if chunk == '{':
                obj_depth += 1
            elif chunk == '}':
                obj_depth -= 1

                if obj_depth == 0:
                    # Un objet JSON complet a été lu
                    try:
                        with open(file_name,'w') as file:
                            file.write(json.loads(current_obj))                       
                    except json.JSONDecodeError:
                        # Gérer une éventuelle erreur de décodage
                        pass

                    current_obj = ''  # Réinitialiser pour le prochain objet JSON
        


username = 'catarinoya'
password = 'QBVMaq237!.bmzW.yctv'

url_serveur = "https://cockpit.intranatixis.com/query/api/json/260" #Url de l'api permettant la récupération des périmètre et leur application 
url_perimetre = "https://cockpit.intranatixis.com/query/api/json/174" #Url de l'api permettant la récupération des périmètre et leur application 

stream_to_file(url_perimetre, "info_api_p.json", (username, password)) #récupètre la liste des périmètres ainsi que les applications qu'ils gèrent
stream_to_file(url_serveur, "info_api_s.json", (username, password)) #récupètre la liste des serveurs connu avec leurs code IUA
print("1")



import json
import requests
from requests.auth import HTTPDigestAuth
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def stream_to_file(url, file_name, auth):
    with requests.get(url, auth=auth, stream=True, verify=False) as r:
        r.raise_for_status()
        
        with open(file_name, 'w') as file:
            obj_depth = 0
            current_obj = ''
            object_list = []  # Une liste pour stocker les objets JSON formatés
            
            for chunk in r.iter_content(chunk_size=8192, decode_unicode=True):
                for char in chunk:
                    current_obj += char
                    if char == '{':
                        obj_depth += 1
                    elif char == '}':
                        obj_depth -= 1

                        if obj_depth == 0:
                            try:
                                json_object = json.loads(current_obj)
                                object_list.append(json_object)  # Ajouter l'objet JSON à la liste
                                current_obj = ''  # Réinitialiser pour le prochain objet JSON
                            except json.JSONDecodeError:
                                pass  # Gérer l'erreur de décodage
            
            # Une fois que tous les objets ont été lus, formatez-les au format souhaité et écrivez-les dans le fichier
            formatted_objects = json.dumps(object_list, indent=4)  # Indentation pour une meilleure lisibilité
            file.write(formatted_objects)

if __name__ == "__main__":
    username = 'catarinoya'
    password = 'QBVMaq237!.bmzW.yctv'
    url_perimetre = "https://cockpit.intranatixis.com/query/api/json/174"
    url_serveur = "https://cockpit.intranatixis.com/query/api/json/260"
    
    stream_to_file(url_perimetre, "info_api_p.json", (username, password))
    stream_to_file(url_serveur, "info_api_s.json", (username, password))
    print("1")

